name: Build Cookify Project

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main, develop ]
  workflow_dispatch:

jobs:
  build:
    name: Build Solution
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET 9.0
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Install .NET MAUI workload
      run: dotnet workload install maui

    - name: Install .NET Aspire workload
      run: dotnet workload install aspire

    - name: Restore dependencies
      run: dotnet restore RecipeApp.sln

    - name: Build solution
      run: dotnet build RecipeApp.sln --configuration Release --no-restore

    - name: Run tests (if any)
      run: dotnet test RecipeApp.sln --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage"
      continue-on-error: true

    - name: Build summary
      run: |
        echo "## Build Results 🚀" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ✅ Successfully built projects:" >> $GITHUB_STEP_SUMMARY
        echo "- **RecipeApp.AppHost** - .NET Aspire orchestrator" >> $GITHUB_STEP_SUMMARY
        echo "- **RecipeApp.ApiService** - ASP.NET Core Web API" >> $GITHUB_STEP_SUMMARY
        echo "- **RecipePortal.WebApp** - Blazor WebAssembly portal" >> $GITHUB_STEP_SUMMARY
        echo "- **RecipeApp.Mobile** - .NET MAUI cross-platform app" >> $GITHUB_STEP_SUMMARY
        echo "- **RecipeApp.ServiceDefaults** - Shared service configuration" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🏗️ Build Configuration:" >> $GITHUB_STEP_SUMMARY
        echo "- **.NET Version:** 9.0" >> $GITHUB_STEP_SUMMARY
        echo "- **Configuration:** Release" >> $GITHUB_STEP_SUMMARY
        echo "- **Platform:** Windows Latest" >> $GITHUB_STEP_SUMMARY
        echo "- **MAUI Workload:** Installed" >> $GITHUB_STEP_SUMMARY
        echo "- **Aspire Workload:** Installed" >> $GITHUB_STEP_SUMMARY

  analyze:
    name: Code Analysis
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET 9.0
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Restore dependencies
      run: dotnet restore RecipeApp.sln

    - name: Run code analysis
      run: dotnet build RecipeApp.sln --configuration Release --verbosity normal

    - name: Check for build warnings
      run: |
        echo "## Code Quality Check 📊" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ Code analysis completed successfully" >> $GITHUB_STEP_SUMMARY
        echo "- No blocking errors found" >> $GITHUB_STEP_SUMMARY
        echo "- Solution builds cleanly in Release mode" >> $GITHUB_STEP_SUMMARY

  validate-structure:
    name: Project Structure Validation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Validate project structure
      run: |
        echo "Validating Cookify project structure..."
        
        # Check for required files
        required_files=(
          "RecipeApp.sln"
          "RecipeApp.AppHost/RecipeApp.AppHost.csproj"
          "RecipeApp.ApiService/RecipeApp.ApiService.csproj"
          "RecipePortal.WebApp/RecipePortal.WebApp.csproj"
          "RecipeApp.Mobile/RecipeApp.Mobile.csproj"
          "RecipeApp.ServiceDefaults/RecipeApp.ServiceDefaults.csproj"
          "README.md"
        )
        
        missing_files=()
        for file in "${required_files[@]}"; do
          if [ ! -f "$file" ]; then
            missing_files+=("$file")
          fi
        done
        
        if [ ${#missing_files[@]} -eq 0 ]; then
          echo "✅ All required project files found"
          echo "## Project Structure Validation ✅" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "All required project files are present:" >> $GITHUB_STEP_SUMMARY
          for file in "${required_files[@]}"; do
            echo "- ✅ $file" >> $GITHUB_STEP_SUMMARY
          done
        else
          echo "❌ Missing required files:"
          printf '%s\n' "${missing_files[@]}"
          echo "## Project Structure Validation ❌" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Missing required files:" >> $GITHUB_STEP_SUMMARY
          for file in "${missing_files[@]}"; do
            echo "- ❌ $file" >> $GITHUB_STEP_SUMMARY
          done
          exit 1
        fi

    - name: Check for AI instruction files
      run: |
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🤖 AI Assistant Files:" >> $GITHUB_STEP_SUMMARY
        if [ -f ".github/copilot-instructions.md" ]; then
          echo "- ✅ GitHub Copilot instructions found" >> $GITHUB_STEP_SUMMARY
        fi
        if [ -f ".github/playwright-mcp-testing.instructions.md" ]; then
          echo "- ✅ Playwright MCP testing instructions found" >> $GITHUB_STEP_SUMMARY
        fi
        if [ -f ".github/init-project.instruction.md" ]; then
          echo "- ✅ Project initialization instructions found" >> $GITHUB_STEP_SUMMARY
        fi
