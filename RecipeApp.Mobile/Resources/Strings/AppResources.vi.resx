<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion. Mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="NoCategoriesFound" xml:space="preserve">
    <value>Kh√¥ng t√¨m th·∫•y danh m·ª•c n√†o</value>
    <comment>Message displayed when no recipe categories are available</comment>
  </data>
  <data name="TryRefreshing" xml:space="preserve">
    <value>Th·ª≠ l√†m m·ªõi ho·∫∑c ki·ªÉm tra k·∫øt n·ªëi</value>
    <comment>Suggestion message when no categories are found</comment>
  </data>
  <data name="BannerAdPlaceholder" xml:space="preserve">
    <value>V·ªã tr√≠ qu·∫£ng c√°o</value>
    <comment>Placeholder text for advertisement banner</comment>
  </data>
  <data name="PrepTime" xml:space="preserve">
    <value>‚è±Ô∏è Th·ªùi gian chu·∫©n b·ªã</value>
    <comment>Label for recipe preparation time</comment>
  </data>
  <data name="CookTime" xml:space="preserve">
    <value>üî• Th·ªùi gian n·∫•u</value>
    <comment>Label for recipe cooking time</comment>
  </data>
  <data name="Category" xml:space="preserve">
    <value>üìÇ Danh m·ª•c</value>
    <comment>Label for recipe category</comment>
  </data>
  <data name="Ingredients" xml:space="preserve">
    <value>ü•ò Nguy√™n li·ªáu</value>
    <comment>Section header for recipe ingredients</comment>
  </data>
  <data name="Instructions" xml:space="preserve">
    <value>üìù H∆∞·ªõng d·∫´n</value>
    <comment>Section header for recipe instructions</comment>
  </data>
  <data name="SelectCategory" xml:space="preserve">
    <value>Ch·ªçn danh m·ª•c</value>
    <comment>Main page title for category selection</comment>
  </data>
  <data name="NoRecipesFound" xml:space="preserve">
    <value>Kh√¥ng t√¨m th·∫•y m√≥n ƒÉn n√†o trong danh m·ª•c n√†y</value>
    <comment>Message when no recipes are found in a category</comment>
  </data>
  <data name="TryAdjustingSearch" xml:space="preserve">
    <value>Th·ª≠ ƒëi·ªÅu ch·ªânh t√¨m ki·∫øm ho·∫∑c ki·ªÉm tra danh m·ª•c kh√°c</value>
    <comment>Suggestion when no recipes found</comment>
  </data>
  <data name="Prep" xml:space="preserve">
    <value>Chu·∫©n b·ªã</value>
    <comment>Short label for preparation time</comment>
  </data>
  <data name="Cook" xml:space="preserve">
    <value>N·∫•u</value>
    <comment>Short label for cooking time</comment>
  </data>
</root>
